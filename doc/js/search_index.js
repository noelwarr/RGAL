var search_data = {"index":{"searchIndex":["cgal","aff_transformation_3","offset_polygon_2","*()","hm()","inverse()","is_even()","is_odd()","m()","new()","to_points()","transform()","license","bootstrap","makefile"],"longSearchIndex":["cgal","cgal::aff_transformation_3","cgal::offset_polygon_2","cgal::aff_transformation_3#*()","cgal::aff_transformation_3#hm()","cgal::aff_transformation_3#inverse()","cgal::aff_transformation_3#is_even()","cgal::aff_transformation_3#is_odd()","cgal::aff_transformation_3#m()","cgal::aff_transformation_3::new()","cgal::offset_polygon_2#to_points()","cgal::aff_transformation_3#transform()","","",""],"info":[["CGAL","","CGAL.html","","<p>There is a fair ammount of work to do in documenting all of this.  If you\nwant to contribute, let us …\n"],["CGAL::Aff_transformation_3","","CGAL/Aff_transformation_3.html","","<p>Affine_transformations\n"],["CGAL::Offset_polygon_2","","CGAL/Offset_polygon_2.html","",""],["*","CGAL::Aff_transformation_3","CGAL/Aff_transformation_3.html#method-i-2A","",""],["hm","CGAL::Aff_transformation_3","CGAL/Aff_transformation_3.html#method-i-hm","",""],["inverse","CGAL::Aff_transformation_3","CGAL/Aff_transformation_3.html#method-i-inverse","",""],["is_even","CGAL::Aff_transformation_3","CGAL/Aff_transformation_3.html#method-i-is_even","",""],["is_odd","CGAL::Aff_transformation_3","CGAL/Aff_transformation_3.html#method-i-is_odd","",""],["m","CGAL::Aff_transformation_3","CGAL/Aff_transformation_3.html#method-i-m","",""],["new","CGAL::Aff_transformation_3","CGAL/Aff_transformation_3.html#method-c-new","(*args)",""],["to_points","CGAL::Offset_polygon_2","CGAL/Offset_polygon_2.html#method-i-to_points","()",""],["transform","CGAL::Aff_transformation_3","CGAL/Aff_transformation_3.html#method-i-transform","(arg)",""],["LICENSE","","LICENSE.html","","<p>Copyright © 2012 Noel Warren, Rodrigo Silveira\n<p>Permission is hereby granted, free of charge, to any …\n"],["bootstrap","","bootstrap.html","","<p>ruby extconf.rb\n"],["Makefile","","cpp/Makefile.html","","<p>SHELL = /bin/sh\n<p># V=0 quiet, V=1 verbose.  other values don’t work. V = 0 Q1 = $(V:1=) Q =\n$(Q1:0=@) n=$( …\n"]]}}